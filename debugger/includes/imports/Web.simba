procedure OpenWebPage(const url: string); begin end;
function GetPage(const S: String): String; begin end;
function InitializeHTTPClient(HandleCookies: Boolean): Integer; begin end;
procedure FreeHTTPClient(Client: Integer); begin end;
function GetHTTPPage(Client: Integer; const URL: string): string; begin end;
procedure SetHTTPUserAgent(Client: Integer; const Agent: string); begin end;
function PostHTTPPage(Client: Integer; const Url,PostData: string): string; begin end;
function PostHTTPPageEx(Client: Integer; const Url: string): string; begin end;
procedure ClearPostData(Client: Integer); begin end;
procedure AddPostVariable(Client: Integer; const VarName, VarValue: string); begin end;
function GetRawHeaders(Client: Integer): string; begin end;
procedure SetProxy(Client: Integer; pHost, pPort: String); begin end;
function RecvSocketStr(Client: integer): string; begin end;
function RecvSocket(Client: integer): string; begin end;
function RecvSocketEx(Client, Length: integer): string; begin end;
procedure SendSocket(Client: integer; Data: string); begin end;
procedure ConnectSocket(Client: integer; IP, Port: string); begin end;
procedure CloseSocket(Client: integer); begin end;
procedure SetSocketTimeout(Client, Time: integer); begin end;
procedure BindSocket(Client: integer; IP, Port: string); begin end;
procedure ListenSocket(Client: integer); begin end;
function AcceptSocket(Client: integer): integer; begin end;
procedure SocketInfo(Client: integer; out IP, Port: string); begin end;
function CreateSocket: integer; begin end;
procedure FreeSocket(Client: integer); begin end;
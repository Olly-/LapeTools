function Capitalize(str: string): string; begin end;
function CompressString(const Str: string): string; begin end;
function DecompressString(const Compressed: string): string; begin end;
function Base64Encode(const str: string): string; begin end;
function Base64Decode(const str: string): string; begin end;
function ExtractFromStr(Str: string; Extract: StrExtr): string; begin end;
function Replace(Text, FindStr, ReplaceStr: string; Flags: TReplaceFlags): string; begin end;
function Between(s1, s2, str: string): string; begin end;
function Implode(Glue: string; Pieces: TStringArray): string; begin end;
function Explode(del, str: string): TStringArray; begin end;
procedure ExplodeWrap(del, str: string; var res: TStringArray); begin end;
function ExecRegExpr(const RegExpr, InputStr: String): boolean; begin end;
procedure SplitRegExpr(const RegExpr, InputStr: String; Pieces: TStrings); begin end;
function ReplaceRegExpr(const RegExpr, InputStr, ReplaceStr: String; UseSubstitution: boolean): String; begin end;
function PosEx(needle, haystack: String; offset: integer): integer; begin end;
function LevDistance(src, target: string): Integer; begin end;
function NormLevDistance(src, target: string): Extended; begin end;
function StringMatch(checkCompare, goalCompare: string): extended; begin end;
function MultiBetween(str, s1, s2: string): TStringArray; begin end;
function IsArrInStr(strArr: TStringArray; s: string): boolean; begin end;
function IsStrInArr(const s: string; const UsePos: Boolean; const arr: TStringArray): boolean; begin end;
function PosMulti(const SubStr: String; Text: string): TIntegerArray; begin end;